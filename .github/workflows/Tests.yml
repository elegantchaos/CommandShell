# --------------------------------------------------------------------------------
# This workflow was automatically generated by Action Status 1.0 (213).
# (see https://actionstatus.elegantchaos.com for more details)
# --------------------------------------------------------------------------------

name: Tests

on: [push, pull_request]

jobs:

    macOS-swift-50:
        name: macOS (Swift 5.0)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift 5.0)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    macOS-swift-51:
        name: macOS (Swift 5.1)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift 5.1)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    macOS-swift-52:
        name: macOS (Swift 5.2 Nightly)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            branch="swift-5.2-branch"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            export PATH="swift-latest:$PATH"
            swift --version
        - name: Build (Release)
          run: export PATH="swift-latest:$PATH"; swift build -c release
        - name: Test (Release)
          run: export PATH="swift-latest:$PATH"; swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift 5.2 Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    macOS-swift-nightly:
        name: macOS (Swift Development Nightly)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            branch="development"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            export PATH="swift-latest:$PATH"
            swift --version
        - name: Build (Release)
          run: export PATH="swift-latest:$PATH"; swift build -c release
        - name: Test (Release)
          run: export PATH="swift-latest:$PATH"; swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'macOS (Swift Development Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-50:
        name: Linux (Swift 5.0)
        runs-on: ubuntu-latest
        container: swift:5.0
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift 5.0)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-51:
        name: Linux (Swift 5.1)
        runs-on: ubuntu-latest
        container: swift:5.1
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift 5.1)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-52:
        name: Linux (Swift 5.2 Nightly)
        runs-on: ubuntu-latest
        container: swiftlang/swift:nightly-5.2
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift 5.2 Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    linux-swift-nightly:
        name: Linux (Swift Development Nightly)
        runs-on: ubuntu-latest
        container: swiftlang/swift:nightly
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Linux (Swift Development Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    xcode-swift-50:
        name: Xcode (Swift 5.0)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Xcode (Swift 5.0)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    xcode-swift-51:
        name: Xcode (Swift 5.1)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Release)
          run: swift build -c release
        - name: Test (Release)
          run: swift test --configuration release -Xswiftc -enable-testing 
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Xcode (Swift 5.1)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    xcode-swift-52:
        name: Xcode (Swift 5.2 Nightly)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            branch="swift-5.2-branch"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            export PATH="swift-latest:$PATH"
            swift --version
        - name: Build (Release)
          run: export PATH="swift-latest:$PATH"; swift build -c release
        - name: Test (Release)
          run: export PATH="swift-latest:$PATH"; swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Xcode (Swift 5.2 Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}


    xcode-swift-nightly:
        name: Xcode (Swift Development Nightly)
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Install Toolchain
          run: |
            branch="development"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            export PATH="swift-latest:$PATH"
            swift --version
        - name: Build (Release)
          run: export PATH="swift-latest:$PATH"; swift build -c release
        - name: Test (Release)
          run: export PATH="swift-latest:$PATH"; swift test --configuration release -Xswiftc -enable-testing --enable-test-discovery
        - name: Slack Notification
          uses: elegantchaos/slatify@master
          if: always()
          with:
            type: ${{ job.status }}
            job_name: 'Xcode (Swift Development Nightly)'
            mention_if: 'failure'
            url: ${{ secrets.SLACK_WEBHOOK }}

